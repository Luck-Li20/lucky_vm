// TreeWalker 对象 
TreeWalker = function TreeWalker(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(TreeWalker,"TreeWalker");
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "root", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "root_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "whatToShow", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "whatToShow_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "filter", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "filter_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "currentNode", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "currentNode_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "currentNode_set", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "firstChild", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "firstChild", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "lastChild", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "lastChild", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "nextNode", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "nextNode", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "nextSibling", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "nextSibling", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "parentNode", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "parentNode", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "previousNode", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "previousNode", arguments)}});
framevm.toolsFunc.defineProperty(TreeWalker.prototype, "previousSibling", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, TreeWalker.prototype, "TreeWalker", "previousSibling", arguments)}});
