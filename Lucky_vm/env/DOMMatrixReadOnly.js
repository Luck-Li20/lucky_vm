// DOMMatrixReadOnly 对象 
DOMMatrixReadOnly = function DOMMatrixReadOnly(){};
framevm.toolsFunc.safeProto(DOMMatrixReadOnly,"DOMMatrixReadOnly");
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly, "fromFloat32Array", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly, "DOMMatrixReadOnly", "fromFloat32Array", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly, "fromFloat64Array", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly, "DOMMatrixReadOnly", "fromFloat64Array", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly, "fromMatrix", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly, "DOMMatrixReadOnly", "fromMatrix", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "a", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "a_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "b", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "b_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "c", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "c_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "d", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "d_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "e", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "e_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "f", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "f_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m11", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m11_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m12", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m12_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m13", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m13_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m14", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m14_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m21", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m21_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m22", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m22_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m23", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m23_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m24", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m24_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m31", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m31_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m32", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m32_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m33", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m33_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m34", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m34_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m41", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m41_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m42", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m42_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m43", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m43_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "m44", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "m44_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "is2D", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "is2D_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "isIdentity", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "isIdentity_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "flipX", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "flipX", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "flipY", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "flipY", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "inverse", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "inverse", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "multiply", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "multiply", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "rotate", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "rotate", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "rotateAxisAngle", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "rotateAxisAngle", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "rotateFromVector", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "rotateFromVector", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "scale", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "scale", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "scale3d", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "scale3d", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "scaleNonUniform", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "scaleNonUniform", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "skewX", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "skewX", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "skewY", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "skewY", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "toFloat32Array", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "toFloat32Array", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "toFloat64Array", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "toFloat64Array", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "toJSON", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "toJSON", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "transformPoint", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "transformPoint", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "translate", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "translate", arguments)}});
framevm.toolsFunc.defineProperty(DOMMatrixReadOnly.prototype, "toString", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, DOMMatrixReadOnly.prototype, "DOMMatrixReadOnly", "toString", arguments)}});
