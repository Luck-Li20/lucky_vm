// PointerEvent 对象 
PointerEvent = function PointerEvent(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'PointerEvent': 1 argument required, but only 0 present.");};
framevm.toolsFunc.safeProto(PointerEvent,"PointerEvent");
Object.setPrototypeOf(PointerEvent.prototype, MouseEvent.prototype);
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "pointerId", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "pointerId_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "width_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "height", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "height_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "pressure", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "pressure_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "tiltX", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "tiltX_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "tiltY", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "tiltY_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "azimuthAngle", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "azimuthAngle_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "altitudeAngle", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "altitudeAngle_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "tangentialPressure", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "tangentialPressure_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "twist", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "twist_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "pointerType", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "pointerType_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "isPrimary", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "isPrimary_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "getCoalescedEvents", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "getCoalescedEvents", arguments)}});
framevm.toolsFunc.defineProperty(PointerEvent.prototype, "getPredictedEvents", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, PointerEvent.prototype, "PointerEvent", "getPredictedEvents", arguments)}});
