// VisualViewport 对象 
VisualViewport = function VisualViewport(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(VisualViewport,"VisualViewport");
Object.setPrototypeOf(VisualViewport.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "offsetLeft", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "offsetLeft_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "offsetTop", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "offsetTop_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "pageLeft", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "pageLeft_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "pageTop", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "pageTop_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "width_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "height", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "height_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "scale", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "scale_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "onresize", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "onresize_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "onresize_set", arguments)}});
framevm.toolsFunc.defineProperty(VisualViewport.prototype, "onscroll", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "onscroll_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, VisualViewport.prototype, "VisualViewport", "onscroll_set", arguments)}});
