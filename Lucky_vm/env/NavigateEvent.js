// NavigateEvent 对象 
NavigateEvent = function NavigateEvent(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'NavigateEvent': 2 arguments required, but only 0 present.");};
framevm.toolsFunc.safeProto(NavigateEvent,"NavigateEvent");
Object.setPrototypeOf(NavigateEvent.prototype, Event.prototype);
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "navigationType", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "navigationType_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "destination", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "destination_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "canTransition", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "canTransition_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "canIntercept", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "canIntercept_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "userInitiated", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "userInitiated_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "hashChange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "hashChange_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "signal", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "signal_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "formData", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "formData_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "downloadRequest", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "downloadRequest_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "info", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "info_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "intercept", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "intercept", arguments)}});
framevm.toolsFunc.defineProperty(NavigateEvent.prototype, "scroll", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, NavigateEvent.prototype, "NavigateEvent", "scroll", arguments)}});
