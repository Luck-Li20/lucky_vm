// USBDevice 对象 
USBDevice = function USBDevice(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(USBDevice,"USBDevice");
framevm.toolsFunc.defineProperty(USBDevice.prototype, "usbVersionMajor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "usbVersionMajor_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "usbVersionMinor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "usbVersionMinor_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "usbVersionSubminor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "usbVersionSubminor_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "deviceClass", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "deviceClass_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "deviceSubclass", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "deviceSubclass_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "deviceProtocol", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "deviceProtocol_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "vendorId", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "vendorId_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "productId", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "productId_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "deviceVersionMajor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "deviceVersionMajor_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "deviceVersionMinor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "deviceVersionMinor_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "deviceVersionSubminor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "deviceVersionSubminor_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "manufacturerName", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "manufacturerName_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "productName", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "productName_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "serialNumber", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "serialNumber_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "configuration", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "configuration_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "configurations", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "configurations_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "opened", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "opened_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "claimInterface", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "claimInterface", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "clearHalt", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "clearHalt", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "close", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "controlTransferIn", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "controlTransferIn", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "controlTransferOut", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "controlTransferOut", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "forget", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "forget", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "isochronousTransferIn", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "isochronousTransferIn", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "isochronousTransferOut", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "isochronousTransferOut", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "open", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "open", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "releaseInterface", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "releaseInterface", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "reset", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "reset", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "selectAlternateInterface", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "selectAlternateInterface", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "selectConfiguration", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "selectConfiguration", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "transferIn", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "transferIn", arguments)}});
framevm.toolsFunc.defineProperty(USBDevice.prototype, "transferOut", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, USBDevice.prototype, "USBDevice", "transferOut", arguments)}});
