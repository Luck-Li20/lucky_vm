// HTMLTextAreaElement 对象 
HTMLTextAreaElement = function HTMLTextAreaElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLTextAreaElement,"HTMLTextAreaElement");
Object.setPrototypeOf(HTMLTextAreaElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "autocomplete", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "autocomplete_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "autocomplete_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "cols", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "cols_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "cols_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "dirName", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "dirName_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "dirName_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "disabled", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "disabled_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "disabled_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "form", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "form_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "maxLength", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "maxLength_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "maxLength_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "minLength", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "minLength_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "minLength_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "name", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "name_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "name_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "placeholder", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "placeholder_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "placeholder_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "readOnly", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "readOnly_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "readOnly_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "required", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "required_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "required_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "rows", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "rows_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "rows_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "wrap", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "wrap_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "wrap_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "type_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "defaultValue", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "defaultValue_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "defaultValue_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "value", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "value_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "value_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "textLength", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "textLength_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "willValidate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "willValidate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "validity", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "validity_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "validationMessage", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "validationMessage_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "labels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "labels_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "selectionStart", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "selectionStart_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "selectionStart_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "selectionEnd", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "selectionEnd_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "selectionEnd_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "selectionDirection", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "selectionDirection_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "selectionDirection_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "checkValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "checkValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "reportValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "reportValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "select", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "select", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "setCustomValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "setCustomValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "setRangeText", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "setRangeText", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTextAreaElement.prototype, "setSelectionRange", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTextAreaElement.prototype, "HTMLTextAreaElement", "setSelectionRange", arguments)}});
