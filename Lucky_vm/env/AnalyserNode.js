// AnalyserNode 对象 
AnalyserNode = function AnalyserNode(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'AnalyserNode': 1 argument required, but only 0 present.");};
framevm.toolsFunc.safeProto(AnalyserNode,"AnalyserNode");
Object.setPrototypeOf(AnalyserNode.prototype, AudioNode.prototype);
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "fftSize", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "fftSize_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "fftSize_set", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "frequencyBinCount", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "frequencyBinCount_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "minDecibels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "minDecibels_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "minDecibels_set", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "maxDecibels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "maxDecibels_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "maxDecibels_set", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "smoothingTimeConstant", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "smoothingTimeConstant_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "smoothingTimeConstant_set", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "getByteFrequencyData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "getByteFrequencyData", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "getByteTimeDomainData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "getByteTimeDomainData", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "getFloatFrequencyData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "getFloatFrequencyData", arguments)}});
framevm.toolsFunc.defineProperty(AnalyserNode.prototype, "getFloatTimeDomainData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AnalyserNode.prototype, "AnalyserNode", "getFloatTimeDomainData", arguments)}});
