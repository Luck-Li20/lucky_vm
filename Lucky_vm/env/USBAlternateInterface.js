// USBAlternateInterface 对象 
USBAlternateInterface = function USBAlternateInterface(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'USBAlternateInterface': 2 arguments required, but only 0 present.");};
framevm.toolsFunc.safeProto(USBAlternateInterface,"USBAlternateInterface");
framevm.toolsFunc.defineProperty(USBAlternateInterface.prototype, "alternateSetting", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBAlternateInterface.prototype, "USBAlternateInterface", "alternateSetting_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBAlternateInterface.prototype, "interfaceClass", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBAlternateInterface.prototype, "USBAlternateInterface", "interfaceClass_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBAlternateInterface.prototype, "interfaceSubclass", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBAlternateInterface.prototype, "USBAlternateInterface", "interfaceSubclass_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBAlternateInterface.prototype, "interfaceProtocol", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBAlternateInterface.prototype, "USBAlternateInterface", "interfaceProtocol_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBAlternateInterface.prototype, "interfaceName", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBAlternateInterface.prototype, "USBAlternateInterface", "interfaceName_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(USBAlternateInterface.prototype, "endpoints", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, USBAlternateInterface.prototype, "USBAlternateInterface", "endpoints_get", arguments)}, set:undefined});
