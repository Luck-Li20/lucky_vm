// MediaKeySession 对象 
MediaKeySession = function MediaKeySession(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(MediaKeySession,"MediaKeySession");
Object.setPrototypeOf(MediaKeySession.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "sessionId", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "sessionId_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "expiration", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "expiration_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "closed", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "closed_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "keyStatuses", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "keyStatuses_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "onkeystatuseschange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "onkeystatuseschange_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "onkeystatuseschange_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "onmessage", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "onmessage_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "onmessage_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "close", arguments)}});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "generateRequest", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "generateRequest", arguments)}});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "load", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "load", arguments)}});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "remove", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "remove", arguments)}});
framevm.toolsFunc.defineProperty(MediaKeySession.prototype, "update", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaKeySession.prototype, "MediaKeySession", "update", arguments)}});
