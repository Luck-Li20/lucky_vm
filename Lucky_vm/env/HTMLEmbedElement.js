// HTMLEmbedElement 对象 
HTMLEmbedElement = function HTMLEmbedElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLEmbedElement,"HTMLEmbedElement");
Object.setPrototypeOf(HTMLEmbedElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "src", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "src_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "src_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "type_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "type_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "width_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "width_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "height", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "height_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "height_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "align", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "align_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "align_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "name", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "name_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "name_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "getSVGDocument", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "getSVGDocument", arguments)}});
