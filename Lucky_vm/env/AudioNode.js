// AudioNode 对象 
AudioNode = function AudioNode(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(AudioNode,"AudioNode");
Object.setPrototypeOf(AudioNode.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(AudioNode.prototype, "context", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "context_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "numberOfInputs", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "numberOfInputs_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "numberOfOutputs", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "numberOfOutputs_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "channelCount", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "channelCount_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "channelCount_set", arguments)}});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "channelCountMode", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "channelCountMode_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "channelCountMode_set", arguments)}});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "channelInterpretation", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "channelInterpretation_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "channelInterpretation_set", arguments)}});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "connect", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "connect", arguments)}});
framevm.toolsFunc.defineProperty(AudioNode.prototype, "disconnect", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioNode.prototype, "AudioNode", "disconnect", arguments)}});
