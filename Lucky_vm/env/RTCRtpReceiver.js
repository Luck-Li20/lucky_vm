// RTCRtpReceiver 对象 
RTCRtpReceiver = function RTCRtpReceiver(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(RTCRtpReceiver,"RTCRtpReceiver");
framevm.toolsFunc.defineProperty(RTCRtpReceiver, "getCapabilities", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver, "RTCRtpReceiver", "getCapabilities", arguments)}});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "track", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "track_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "transport", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "transport_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "rtcpTransport", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "rtcpTransport_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "playoutDelayHint", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "playoutDelayHint_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "playoutDelayHint_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "createEncodedStreams", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "createEncodedStreams", arguments)}});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "getContributingSources", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "getContributingSources", arguments)}});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "getParameters", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "getParameters", arguments)}});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "getStats", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "getStats", arguments)}});
framevm.toolsFunc.defineProperty(RTCRtpReceiver.prototype, "getSynchronizationSources", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCRtpReceiver.prototype, "RTCRtpReceiver", "getSynchronizationSources", arguments)}});
