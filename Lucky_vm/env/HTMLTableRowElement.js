// HTMLTableRowElement 对象 
HTMLTableRowElement = function HTMLTableRowElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLTableRowElement,"HTMLTableRowElement");
Object.setPrototypeOf(HTMLTableRowElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "rowIndex", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "rowIndex_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "sectionRowIndex", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "sectionRowIndex_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "cells", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "cells_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "align", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "align_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "align_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "ch", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "ch_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "ch_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "chOff", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "chOff_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "chOff_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "vAlign", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "vAlign_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "vAlign_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "bgColor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "bgColor_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "bgColor_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "deleteCell", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "deleteCell", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableRowElement.prototype, "insertCell", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableRowElement.prototype, "HTMLTableRowElement", "insertCell", arguments)}});
