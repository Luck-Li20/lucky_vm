// RemotePlayback 对象 
RemotePlayback = function RemotePlayback(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(RemotePlayback,"RemotePlayback");
Object.setPrototypeOf(RemotePlayback.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "state", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "state_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "onconnecting", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "onconnecting_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "onconnecting_set", arguments)}});
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "onconnect", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "onconnect_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "onconnect_set", arguments)}});
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "ondisconnect", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "ondisconnect_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "ondisconnect_set", arguments)}});
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "cancelWatchAvailability", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "cancelWatchAvailability", arguments)}});
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "prompt", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "prompt", arguments)}});
framevm.toolsFunc.defineProperty(RemotePlayback.prototype, "watchAvailability", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RemotePlayback.prototype, "RemotePlayback", "watchAvailability", arguments)}});
