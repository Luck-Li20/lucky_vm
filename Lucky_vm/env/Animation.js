// Animation 对象 
Animation = function Animation(){};
framevm.toolsFunc.safeProto(Animation,"Animation");
Object.setPrototypeOf(Animation.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(Animation.prototype, "effect", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "effect_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "effect_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "startTime", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "startTime_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "startTime_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "currentTime", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "currentTime_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "currentTime_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "playbackRate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "playbackRate_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "playbackRate_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "playState", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "playState_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Animation.prototype, "pending", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "pending_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Animation.prototype, "id", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "id_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "id_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "onfinish", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "onfinish_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "onfinish_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "oncancel", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "oncancel_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "oncancel_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "cancel", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "cancel", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "finish", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "finish", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "pause", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "pause", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "play", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "play", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "reverse", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "reverse", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "updatePlaybackRate", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "updatePlaybackRate", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "timeline", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "timeline_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "timeline_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "replaceState", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "replaceState_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Animation.prototype, "onremove", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "onremove_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "onremove_set", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "finished", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "finished_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Animation.prototype, "ready", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "ready_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Animation.prototype, "commitStyles", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "commitStyles", arguments)}});
framevm.toolsFunc.defineProperty(Animation.prototype, "persist", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Animation.prototype, "Animation", "persist", arguments)}});
