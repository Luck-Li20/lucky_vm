// PerformanceElementTiming 对象 
PerformanceElementTiming = function PerformanceElementTiming(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(PerformanceElementTiming,"PerformanceElementTiming");
Object.setPrototypeOf(PerformanceElementTiming.prototype, PerformanceEntry.prototype);
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "renderTime", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "renderTime_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "loadTime", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "loadTime_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "intersectionRect", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "intersectionRect_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "identifier", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "identifier_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "naturalWidth", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "naturalWidth_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "naturalHeight", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "naturalHeight_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "id", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "id_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "element", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "element_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "url", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "url_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PerformanceElementTiming.prototype, "toJSON", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, PerformanceElementTiming.prototype, "PerformanceElementTiming", "toJSON", arguments)}});
