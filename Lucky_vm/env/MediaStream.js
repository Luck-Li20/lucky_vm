// MediaStream 对象 
MediaStream = function MediaStream(){};
framevm.toolsFunc.safeProto(MediaStream,"MediaStream");
Object.setPrototypeOf(MediaStream.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(MediaStream.prototype, "id", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "id_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "active", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "active_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "onaddtrack", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "onaddtrack_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "onaddtrack_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "onremovetrack", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "onremovetrack_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "onremovetrack_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "onactive", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "onactive_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "onactive_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "oninactive", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "oninactive_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "oninactive_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "addTrack", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "addTrack", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "clone", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "clone", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "getAudioTracks", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "getAudioTracks", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "getTrackById", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "getTrackById", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "getTracks", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "getTracks", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "getVideoTracks", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "getVideoTracks", arguments)}});
framevm.toolsFunc.defineProperty(MediaStream.prototype, "removeTrack", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaStream.prototype, "MediaStream", "removeTrack", arguments)}});
