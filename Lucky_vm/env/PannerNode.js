// PannerNode 对象 
PannerNode = function PannerNode(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'PannerNode': 1 argument required, but only 0 present.");};
framevm.toolsFunc.safeProto(PannerNode,"PannerNode");
Object.setPrototypeOf(PannerNode.prototype, AudioNode.prototype);
framevm.toolsFunc.defineProperty(PannerNode.prototype, "panningModel", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "panningModel_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "panningModel_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "positionX", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "positionX_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "positionY", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "positionY_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "positionZ", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "positionZ_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "orientationX", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "orientationX_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "orientationY", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "orientationY_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "orientationZ", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "orientationZ_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "distanceModel", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "distanceModel_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "distanceModel_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "refDistance", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "refDistance_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "refDistance_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "maxDistance", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "maxDistance_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "maxDistance_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "rolloffFactor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "rolloffFactor_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "rolloffFactor_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "coneInnerAngle", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "coneInnerAngle_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "coneInnerAngle_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "coneOuterAngle", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "coneOuterAngle_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "coneOuterAngle_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "coneOuterGain", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "coneOuterGain_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "coneOuterGain_set", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "setOrientation", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "setOrientation", arguments)}});
framevm.toolsFunc.defineProperty(PannerNode.prototype, "setPosition", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, PannerNode.prototype, "PannerNode", "setPosition", arguments)}});
