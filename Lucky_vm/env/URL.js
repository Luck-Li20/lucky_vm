// URL 对象 
URL = function URL(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'URL': 1 argument required, but only 0 present.");};
framevm.toolsFunc.safeProto(URL,"URL");
framevm.toolsFunc.defineProperty(URL, "createObjectURL", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, URL, "URL", "createObjectURL", arguments)}});
framevm.toolsFunc.defineProperty(URL, "revokeObjectURL", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, URL, "URL", "revokeObjectURL", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "origin", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "origin_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(URL.prototype, "protocol", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "protocol_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "protocol_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "username", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "username_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "username_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "password", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "password_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "password_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "host", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "host_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "host_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "hostname", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "hostname_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "hostname_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "port", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "port_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "port_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "pathname", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "pathname_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "pathname_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "search", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "search_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "search_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "searchParams", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "searchParams_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(URL.prototype, "hash", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "hash_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "hash_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "href", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "href_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "href_set", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "toJSON", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "toJSON", arguments)}});
framevm.toolsFunc.defineProperty(URL.prototype, "toString", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, URL.prototype, "URL", "toString", arguments)}});
