// AudioData 对象 
AudioData = function AudioData(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'AudioData': 1 argument required, but only 0 present.");};
framevm.toolsFunc.safeProto(AudioData,"AudioData");
framevm.toolsFunc.defineProperty(AudioData.prototype, "format", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "format_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioData.prototype, "sampleRate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "sampleRate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioData.prototype, "numberOfFrames", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "numberOfFrames_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioData.prototype, "numberOfChannels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "numberOfChannels_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioData.prototype, "duration", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "duration_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioData.prototype, "timestamp", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "timestamp_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioData.prototype, "allocationSize", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "allocationSize", arguments)}});
framevm.toolsFunc.defineProperty(AudioData.prototype, "clone", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "clone", arguments)}});
framevm.toolsFunc.defineProperty(AudioData.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "close", arguments)}});
framevm.toolsFunc.defineProperty(AudioData.prototype, "copyTo", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioData.prototype, "AudioData", "copyTo", arguments)}});
