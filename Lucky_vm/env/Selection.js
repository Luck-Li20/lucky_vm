// Selection 对象 
Selection = function Selection(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(Selection,"Selection");
framevm.toolsFunc.defineProperty(Selection.prototype, "anchorNode", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "anchorNode_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "anchorOffset", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "anchorOffset_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "focusNode", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "focusNode_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "focusOffset", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "focusOffset_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "isCollapsed", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "isCollapsed_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "rangeCount", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "rangeCount_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "type_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "baseNode", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "baseNode_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "baseOffset", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "baseOffset_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "extentNode", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "extentNode_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "extentOffset", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "extentOffset_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Selection.prototype, "addRange", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "addRange", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "collapse", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "collapse", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "collapseToEnd", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "collapseToEnd", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "collapseToStart", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "collapseToStart", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "containsNode", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "containsNode", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "deleteFromDocument", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "deleteFromDocument", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "empty", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "empty", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "extend", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "extend", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "getRangeAt", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "getRangeAt", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "modify", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "modify", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "removeAllRanges", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "removeAllRanges", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "removeRange", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "removeRange", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "selectAllChildren", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "selectAllChildren", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "setBaseAndExtent", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "setBaseAndExtent", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "setPosition", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "setPosition", arguments)}});
framevm.toolsFunc.defineProperty(Selection.prototype, "toString", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Selection.prototype, "Selection", "toString", arguments)}});
