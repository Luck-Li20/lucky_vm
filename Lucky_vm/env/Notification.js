// Notification 对象 
Notification = function Notification(){return framevm.toolsFunc.throwError("TypeError", "Failed to construct 'Notification': 1 argument required, but only 0 present.");};
framevm.toolsFunc.safeProto(Notification,"Notification");
Object.setPrototypeOf(Notification.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(Notification, "permission", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification, "Notification", "permission_get", arguments, 'default')}, set:undefined});
framevm.toolsFunc.defineProperty(Notification, "maxActions", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification, "Notification", "maxActions_get", arguments, 2)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification, "requestPermission", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Notification, "Notification", "requestPermission", arguments)}});
framevm.toolsFunc.defineProperty(Notification.prototype, "onclick", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onclick_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onclick_set", arguments)}});
framevm.toolsFunc.defineProperty(Notification.prototype, "onshow", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onshow_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onshow_set", arguments)}});
framevm.toolsFunc.defineProperty(Notification.prototype, "onerror", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onerror_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onerror_set", arguments)}});
framevm.toolsFunc.defineProperty(Notification.prototype, "onclose", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onclose_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "onclose_set", arguments)}});
framevm.toolsFunc.defineProperty(Notification.prototype, "title", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "title_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "dir", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "dir_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "lang", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "lang_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "body", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "body_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "tag", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "tag_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "icon", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "icon_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "badge", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "badge_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "vibrate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "vibrate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "timestamp", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "timestamp_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "renotify", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "renotify_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "silent", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "silent_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "requireInteraction", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "requireInteraction_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "data", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "data_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "actions", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "actions_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(Notification.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "close", arguments)}});
framevm.toolsFunc.defineProperty(Notification.prototype, "image", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, Notification.prototype, "Notification", "image_get", arguments)}, set:undefined});
