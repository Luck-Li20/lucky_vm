// HTMLSelectElement 对象
HTMLSelectElement = function HTMLSelectElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLSelectElement,"HTMLSelectElement");
Object.setPrototypeOf(HTMLSelectElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "autocomplete", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "autocomplete_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "autocomplete_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "disabled", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "disabled_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "disabled_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "form", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "form_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "multiple", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "multiple_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "multiple_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "name", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "name_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "name_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "required", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "required_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "required_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "size", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "size_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "size_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "type_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "options", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "options_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "length", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "length_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "length_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "selectedOptions", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "selectedOptions_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "selectedIndex", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "selectedIndex_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "selectedIndex_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "value", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "value_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "value_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "willValidate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "willValidate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "validity", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "validity_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "validationMessage", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "validationMessage_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "labels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "labels_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "add", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "add", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "checkValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "checkValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "item", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "item", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "namedItem", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "namedItem", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "remove", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "remove", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "reportValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "reportValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLSelectElement.prototype, "setCustomValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLSelectElement.prototype, "HTMLSelectElement", "setCustomValidity", arguments)}});
