// IntersectionObserverEntry 对象 
IntersectionObserverEntry = function IntersectionObserverEntry(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(IntersectionObserverEntry,"IntersectionObserverEntry");
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "time", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "time_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "rootBounds", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "rootBounds_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "boundingClientRect", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "boundingClientRect_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "intersectionRect", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "intersectionRect_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "isIntersecting", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "isIntersecting_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "isVisible", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "isVisible_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "intersectionRatio", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "intersectionRatio_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IntersectionObserverEntry.prototype, "target", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IntersectionObserverEntry.prototype, "IntersectionObserverEntry", "target_get", arguments)}, set:undefined});
