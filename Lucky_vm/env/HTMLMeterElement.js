// HTMLMeterElement 对象 
HTMLMeterElement = function HTMLMeterElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLMeterElement,"HTMLMeterElement");
Object.setPrototypeOf(HTMLMeterElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "value", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "value_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "value_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "min", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "min_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "min_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "max", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "max_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "max_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "low", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "low_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "low_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "high", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "high_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "high_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "optimum", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "optimum_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "optimum_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "labels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "labels_get", arguments)}, set:undefined});
