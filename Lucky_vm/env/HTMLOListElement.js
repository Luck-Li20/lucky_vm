// HTMLOListElement 对象 
HTMLOListElement = function HTMLOListElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLOListElement,"HTMLOListElement");
Object.setPrototypeOf(HTMLOListElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLOListElement.prototype, "reversed", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "reversed_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "reversed_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOListElement.prototype, "start", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "start_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "start_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOListElement.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "type_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "type_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOListElement.prototype, "compact", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "compact_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOListElement.prototype, "HTMLOListElement", "compact_set", arguments)}});
