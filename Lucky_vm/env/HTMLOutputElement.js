// HTMLOutputElement 对象 
HTMLOutputElement = function HTMLOutputElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLOutputElement,"HTMLOutputElement");
Object.setPrototypeOf(HTMLOutputElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "htmlFor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "htmlFor_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "htmlFor_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "form", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "form_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "name", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "name_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "name_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "type_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "defaultValue", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "defaultValue_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "defaultValue_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "value", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "value_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "value_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "willValidate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "willValidate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "validity", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "validity_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "validationMessage", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "validationMessage_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "labels", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "labels_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "checkValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "checkValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "reportValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "reportValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLOutputElement.prototype, "setCustomValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLOutputElement.prototype, "HTMLOutputElement", "setCustomValidity", arguments)}});
