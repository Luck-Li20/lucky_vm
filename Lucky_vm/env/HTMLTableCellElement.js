// HTMLTableCellElement 对象 
HTMLTableCellElement = function HTMLTableCellElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLTableCellElement,"HTMLTableCellElement");
Object.setPrototypeOf(HTMLTableCellElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "colSpan", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "colSpan_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "colSpan_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "rowSpan", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "rowSpan_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "rowSpan_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "headers", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "headers_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "headers_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "cellIndex", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "cellIndex_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "align", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "align_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "align_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "axis", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "axis_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "axis_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "height", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "height_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "height_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "width_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "width_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "ch", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "ch_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "ch_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "chOff", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "chOff_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "chOff_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "noWrap", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "noWrap_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "noWrap_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "vAlign", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "vAlign_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "vAlign_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "bgColor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "bgColor_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "bgColor_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "abbr", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "abbr_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "abbr_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableCellElement.prototype, "scope", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "scope_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableCellElement.prototype, "HTMLTableCellElement", "scope_set", arguments)}});
