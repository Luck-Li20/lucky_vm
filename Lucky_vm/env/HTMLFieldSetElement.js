// HTMLFieldSetElement 对象
HTMLFieldSetElement = function HTMLFieldSetElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLFieldSetElement,"HTMLFieldSetElement");
Object.setPrototypeOf(HTMLFieldSetElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "disabled", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "disabled_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "disabled_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "form", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "form_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "name", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "name_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "name_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "type", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "type_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "elements", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "elements_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "willValidate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "willValidate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "validity", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "validity_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "validationMessage", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "validationMessage_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "checkValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "checkValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "reportValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "reportValidity", arguments)}});
framevm.toolsFunc.defineProperty(HTMLFieldSetElement.prototype, "setCustomValidity", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLFieldSetElement.prototype, "HTMLFieldSetElement", "setCustomValidity", arguments)}});
