// RTCIceTransport 对象 
RTCIceTransport = function RTCIceTransport(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(RTCIceTransport,"RTCIceTransport");
Object.setPrototypeOf(RTCIceTransport.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "role", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "role_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "state", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "state_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "gatheringState", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "gatheringState_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "onstatechange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "onstatechange_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "onstatechange_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "ongatheringstatechange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "ongatheringstatechange_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "ongatheringstatechange_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "onselectedcandidatepairchange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "onselectedcandidatepairchange_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "onselectedcandidatepairchange_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "getLocalCandidates", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "getLocalCandidates", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "getLocalParameters", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "getLocalParameters", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "getRemoteCandidates", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "getRemoteCandidates", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "getRemoteParameters", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "getRemoteParameters", arguments)}});
framevm.toolsFunc.defineProperty(RTCIceTransport.prototype, "getSelectedCandidatePair", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCIceTransport.prototype, "RTCIceTransport", "getSelectedCandidatePair", arguments)}});
