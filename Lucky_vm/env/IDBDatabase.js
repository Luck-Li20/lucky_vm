// IDBDatabase 对象
IDBDatabase = function IDBDatabase(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(IDBDatabase,"IDBDatabase");
Object.setPrototypeOf(IDBDatabase.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "name", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "name_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "version", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "version_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "objectStoreNames", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "objectStoreNames_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "onabort", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onabort_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onabort_set", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "onclose", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onclose_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onclose_set", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "onerror", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onerror_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onerror_set", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "onversionchange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onversionchange_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "onversionchange_set", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "close", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "createObjectStore", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "createObjectStore", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "deleteObjectStore", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "deleteObjectStore", arguments)}});
framevm.toolsFunc.defineProperty(IDBDatabase.prototype, "transaction", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, IDBDatabase.prototype, "IDBDatabase", "transaction", arguments)}});
