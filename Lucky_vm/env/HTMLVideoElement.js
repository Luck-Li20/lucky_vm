// HTMLVideoElement 对象
HTMLVideoElement = function HTMLVideoElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLVideoElement,"HTMLVideoElement");
Object.setPrototypeOf(HTMLVideoElement.prototype, HTMLMediaElement.prototype);
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "width_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "width_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "height", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "height_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "height_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "videoWidth", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "videoWidth_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "videoHeight", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "videoHeight_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "poster", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "poster_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "poster_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitDecodedFrameCount", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitDecodedFrameCount_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitDroppedFrameCount", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitDroppedFrameCount_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "playsInline", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "playsInline_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "playsInline_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "cancelVideoFrameCallback", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "cancelVideoFrameCallback", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "requestVideoFrameCallback", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "requestVideoFrameCallback", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitSupportsFullscreen", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitSupportsFullscreen_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitDisplayingFullscreen", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitDisplayingFullscreen_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "onenterpictureinpicture", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "onenterpictureinpicture_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "onenterpictureinpicture_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "onleavepictureinpicture", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "onleavepictureinpicture_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "onleavepictureinpicture_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "disablePictureInPicture", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "disablePictureInPicture_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "disablePictureInPicture_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "getVideoPlaybackQuality", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "getVideoPlaybackQuality", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "requestPictureInPicture", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "requestPictureInPicture", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitEnterFullScreen", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitEnterFullScreen", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitEnterFullscreen", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitEnterFullscreen", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitExitFullScreen", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitExitFullScreen", arguments)}});
framevm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitExitFullscreen", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitExitFullscreen", arguments)}});
