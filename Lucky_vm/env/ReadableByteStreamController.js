// ReadableByteStreamController 对象 
ReadableByteStreamController = function ReadableByteStreamController(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(ReadableByteStreamController,"ReadableByteStreamController");
framevm.toolsFunc.defineProperty(ReadableByteStreamController.prototype, "byobRequest", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, ReadableByteStreamController.prototype, "ReadableByteStreamController", "byobRequest_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(ReadableByteStreamController.prototype, "desiredSize", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, ReadableByteStreamController.prototype, "ReadableByteStreamController", "desiredSize_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(ReadableByteStreamController.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, ReadableByteStreamController.prototype, "ReadableByteStreamController", "close", arguments)}});
framevm.toolsFunc.defineProperty(ReadableByteStreamController.prototype, "enqueue", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, ReadableByteStreamController.prototype, "ReadableByteStreamController", "enqueue", arguments)}});
framevm.toolsFunc.defineProperty(ReadableByteStreamController.prototype, "error", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, ReadableByteStreamController.prototype, "ReadableByteStreamController", "error", arguments)}});
