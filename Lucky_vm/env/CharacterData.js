// CharacterData 对象
CharacterData = function CharacterData(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(CharacterData,"CharacterData");
Object.setPrototypeOf(CharacterData.prototype, Node.prototype);
framevm.toolsFunc.defineProperty(CharacterData.prototype, "data", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "data_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "data_set", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "length", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "length_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "previousElementSibling", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "previousElementSibling_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "nextElementSibling", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "nextElementSibling_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "after", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "after", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "appendData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "appendData", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "before", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "before", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "deleteData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "deleteData", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "insertData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "insertData", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "remove", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "remove", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "replaceData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "replaceData", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "replaceWith", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "replaceWith", arguments)}});
framevm.toolsFunc.defineProperty(CharacterData.prototype, "substringData", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, CharacterData.prototype, "CharacterData", "substringData", arguments)}});
