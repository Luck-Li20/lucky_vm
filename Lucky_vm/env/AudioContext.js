// AudioContext 对象 
AudioContext = function AudioContext(){};
framevm.toolsFunc.safeProto(AudioContext,"AudioContext");
Object.setPrototypeOf(AudioContext.prototype, BaseAudioContext.prototype);
framevm.toolsFunc.defineProperty(AudioContext.prototype, "baseLatency", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "baseLatency_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "outputLatency", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "outputLatency_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "close", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "createMediaElementSource", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "createMediaElementSource", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "createMediaStreamDestination", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "createMediaStreamDestination", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "createMediaStreamSource", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "createMediaStreamSource", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "getOutputTimestamp", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "getOutputTimestamp", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "resume", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "resume", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "suspend", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "suspend", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "sinkId", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "sinkId_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "onsinkchange", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "onsinkchange_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "onsinkchange_set", arguments)}});
framevm.toolsFunc.defineProperty(AudioContext.prototype, "setSinkId", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, AudioContext.prototype, "AudioContext", "setSinkId", arguments)}});
