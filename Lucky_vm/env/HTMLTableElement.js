// HTMLTableElement 对象 
HTMLTableElement = function HTMLTableElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(HTMLTableElement,"HTMLTableElement");
Object.setPrototypeOf(HTMLTableElement.prototype, HTMLElement.prototype);
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "caption", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "caption_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "caption_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "tHead", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "tHead_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "tHead_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "tFoot", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "tFoot_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "tFoot_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "tBodies", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "tBodies_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "rows", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "rows_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "align", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "align_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "align_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "border", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "border_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "border_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "frame", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "frame_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "frame_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "rules", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "rules_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "rules_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "summary", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "summary_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "summary_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "width_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "width_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "bgColor", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "bgColor_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "bgColor_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "cellPadding", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "cellPadding_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "cellPadding_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "cellSpacing", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "cellSpacing_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "cellSpacing_set", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "createCaption", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "createCaption", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "createTBody", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "createTBody", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "createTFoot", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "createTFoot", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "createTHead", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "createTHead", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "deleteCaption", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "deleteCaption", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "deleteRow", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "deleteRow", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "deleteTFoot", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "deleteTFoot", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "deleteTHead", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "deleteTHead", arguments)}});
framevm.toolsFunc.defineProperty(HTMLTableElement.prototype, "insertRow", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, HTMLTableElement.prototype, "HTMLTableElement", "insertRow", arguments)}});
