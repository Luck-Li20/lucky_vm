// RTCDataChannel 对象 
RTCDataChannel = function RTCDataChannel(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(RTCDataChannel,"RTCDataChannel");
Object.setPrototypeOf(RTCDataChannel.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "label", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "label_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "ordered", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "ordered_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "maxPacketLifeTime", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "maxPacketLifeTime_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "maxRetransmits", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "maxRetransmits_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "protocol", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "protocol_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "negotiated", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "negotiated_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "id", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "id_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "readyState", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "readyState_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "bufferedAmount", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "bufferedAmount_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "bufferedAmountLowThreshold", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "bufferedAmountLowThreshold_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "bufferedAmountLowThreshold_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "onopen", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onopen_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onopen_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "onbufferedamountlow", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onbufferedamountlow_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onbufferedamountlow_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "onerror", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onerror_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onerror_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "onclosing", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onclosing_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onclosing_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "onclose", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onclose_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onclose_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "onmessage", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onmessage_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "onmessage_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "binaryType", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "binaryType_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "binaryType_set", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "reliable", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "reliable_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "close", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "close", arguments)}});
framevm.toolsFunc.defineProperty(RTCDataChannel.prototype, "send", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, RTCDataChannel.prototype, "RTCDataChannel", "send", arguments)}});
