// MediaSource 对象 
MediaSource = function MediaSource(){};
framevm.toolsFunc.safeProto(MediaSource,"MediaSource");
Object.setPrototypeOf(MediaSource.prototype, EventTarget.prototype);
framevm.toolsFunc.defineProperty(MediaSource, "isTypeSupported", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaSource, "MediaSource", "isTypeSupported", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource, "canConstructInDedicatedWorker", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource, "MediaSource", "canConstructInDedicatedWorker_get", arguments, true)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "sourceBuffers", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "sourceBuffers_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "activeSourceBuffers", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "activeSourceBuffers_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "duration", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "duration_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "duration_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "onsourceopen", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "onsourceopen_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "onsourceopen_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "onsourceended", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "onsourceended_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "onsourceended_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "onsourceclose", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "onsourceclose_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "onsourceclose_set", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "readyState", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "readyState_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "addSourceBuffer", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "addSourceBuffer", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "clearLiveSeekableRange", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "clearLiveSeekableRange", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "endOfStream", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "endOfStream", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "removeSourceBuffer", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "removeSourceBuffer", arguments)}});
framevm.toolsFunc.defineProperty(MediaSource.prototype, "setLiveSeekableRange", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, MediaSource.prototype, "MediaSource", "setLiveSeekableRange", arguments)}});
