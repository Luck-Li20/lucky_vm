// SVGSVGElement 对象 
SVGSVGElement = function SVGSVGElement(){return framevm.toolsFunc.throwError("TypeError", "Illegal constructor");};
framevm.toolsFunc.safeProto(SVGSVGElement,"SVGSVGElement");
Object.setPrototypeOf(SVGSVGElement.prototype, SVGGraphicsElement.prototype);
framevm.toolsFunc.defineProperty(SVGSVGElement, "SVG_ZOOMANDPAN_UNKNOWN", {configurable:false, enumerable:true, writable:false, value:0});
framevm.toolsFunc.defineProperty(SVGSVGElement, "SVG_ZOOMANDPAN_DISABLE", {configurable:false, enumerable:true, writable:false, value:1});
framevm.toolsFunc.defineProperty(SVGSVGElement, "SVG_ZOOMANDPAN_MAGNIFY", {configurable:false, enumerable:true, writable:false, value:2});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "x", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "x_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "y", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "y_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "width", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "width_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "height", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "height_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "currentScale", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "currentScale_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "currentScale_set", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "currentTranslate", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "currentTranslate_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "viewBox", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "viewBox_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "preserveAspectRatio", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "preserveAspectRatio_get", arguments)}, set:undefined});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "zoomAndPan", {configurable:true, enumerable:true, get:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "zoomAndPan_get", arguments)}, set:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "zoomAndPan_set", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "SVG_ZOOMANDPAN_UNKNOWN", {configurable:false, enumerable:true, writable:false, value:0});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "SVG_ZOOMANDPAN_DISABLE", {configurable:false, enumerable:true, writable:false, value:1});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "SVG_ZOOMANDPAN_MAGNIFY", {configurable:false, enumerable:true, writable:false, value:2});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "animationsPaused", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "animationsPaused", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "checkEnclosure", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "checkEnclosure", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "checkIntersection", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "checkIntersection", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGAngle", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGAngle", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGLength", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGLength", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGMatrix", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGMatrix", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGNumber", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGNumber", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGPoint", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGPoint", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGRect", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGRect", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGTransform", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGTransform", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "createSVGTransformFromMatrix", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "createSVGTransformFromMatrix", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "deselectAll", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "deselectAll", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "forceRedraw", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "forceRedraw", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "getCurrentTime", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "getCurrentTime", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "getElementById", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "getElementById", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "getEnclosureList", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "getEnclosureList", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "getIntersectionList", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "getIntersectionList", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "pauseAnimations", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "pauseAnimations", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "setCurrentTime", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "setCurrentTime", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "suspendRedraw", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "suspendRedraw", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "unpauseAnimations", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "unpauseAnimations", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "unsuspendRedraw", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "unsuspendRedraw", arguments)}});
framevm.toolsFunc.defineProperty(SVGSVGElement.prototype, "unsuspendRedrawAll", {configurable:true, enumerable:true, writable:true, value:function (){return framevm.toolsFunc.dispatch(this, SVGSVGElement.prototype, "SVGSVGElement", "unsuspendRedrawAll", arguments)}});
